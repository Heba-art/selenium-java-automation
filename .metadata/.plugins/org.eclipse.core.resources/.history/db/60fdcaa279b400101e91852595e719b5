package com.mycompany.selenium_automation_project.tests;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.mycompany.selenium_automation_project.CartPage;
import com.mycompany.selenium_automation_project.CheckoutPage;
import com.mycompany.selenium_automation_project.LoginPage;
import com.mycompany.selenium_automation_project.ProductsPage;
import com.mycompany.selenium_automation_project.base.BaseTest;

import io.qameta.allure.Description;
import io.qameta.allure.Epic;
import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import io.qameta.allure.Story;

public class SauceDemoCheckoutTest extends BaseTest{

	@Epic("SauceDemo Automation")
	@Feature("Checkout")
	@Story("Complete checkout process successfully")
	@Severity(SeverityLevel.CRITICAL)
	@Owner("Heba AL-Rubaye")
	@Description("Verify that a user can complete the full checkout process from cart to the 'Checkout: Complete!' page.")
	@Test(priority = 6)
	
	
	public void TC_SD_006_completeCheckoutFlow() {
	    final String product = "Sauce Labs Backpack";

	    // 1) Login
	    LoginPage login = new LoginPage(driver);
	    login.open(baseUrl);
	    login.login("standard_user", "secret_sauce");

	    // 2) Products: add one item
	    ProductsPage products = new ProductsPage(driver);
	    products.waitUntilLoaded();
	    products.addProductToCart(product);
	    Assert.assertEquals(products.getCartBadgeText(), "1", "Badge should be 1 after adding one item");

	    // 3) Open Cart and verify item exists
	    CartPage cart = products.openCart();
	    Assert.assertTrue(cart.isLoaded(), "Cart should load");
	    Assert.assertTrue(cart.isProductInCart(product), "Item must exist before checkout");

	    // 4) Go to Checkout STEP ONE (use one click path + URL/field waits)
	    By checkoutBtn = By.cssSelector("[data-test='checkout']");
	    clickWithRetry(checkoutBtn);
	    new WebDriverWait(driver, Duration.ofSeconds(12))
	            .until(ExpectedConditions.urlContains("/checkout-step-one.html"));
	    new WebDriverWait(driver, Duration.ofSeconds(8))
	            .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("[data-test='firstName']")));

	    // 5) Fill info and CONTINUE to STEP TWO (Overview)
	    driver.findElement(By.cssSelector("[data-test='firstName']")).sendKeys("Heba");
	    driver.findElement(By.cssSelector("[data-test='lastName']")).sendKeys("QA");
	    driver.findElement(By.cssSelector("[data-test='postalCode']")).sendKeys("3000");

	    By contBtn = By.cssSelector("[data-test='continue']");
	    WebElement continueButton = driver.findElement(contBtn);

	    // Scroll + safe click
	    ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView({block:'center'});", continueButton);
	    try {
	        new WebDriverWait(driver, Duration.ofSeconds(5))
	                .until(ExpectedConditions.elementToBeClickable(continueButton))
	                .click();
	    } catch (Exception e) {
	        ((JavascriptExecutor) driver).executeScript("arguments[0].click();", continueButton);
	    }

	    // Confirm transfer
	    new WebDriverWait(driver, Duration.ofSeconds(15))
	            .until(ExpectedConditions.or(
	                    ExpectedConditions.urlContains("/checkout-step-two.html"),
	                    ExpectedConditions.presenceOfElementLocated(By.cssSelector(".summary_info"))
	            ));


	    // 6) FINISH and wait for COMPLETE page
	    By finishBtn = By.cssSelector("[data-test='finish']");
	    clickWithRetry(finishBtn);
	    new WebDriverWait(driver, Duration.ofSeconds(12))
	            .until(ExpectedConditions.urlContains("/checkout-complete.html"));
	    new WebDriverWait(driver, Duration.ofSeconds(8))
	            .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".complete-header")));

	    // 7) Final assertion
	    String successMsg = driver.findElement(By.cssSelector(".complete-header")).getText();
	    Assert.assertEquals(successMsg, "Thank you for your order!");
	}
}
